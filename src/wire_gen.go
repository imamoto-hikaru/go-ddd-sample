// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	calendar3 "advent-calendar/application/calendar"
	entry3 "advent-calendar/application/entry"
	user3 "advent-calendar/application/user"
	calendar2 "advent-calendar/infrastructure/calendar"
	entry2 "advent-calendar/infrastructure/entry"
	user2 "advent-calendar/infrastructure/user"
	"advent-calendar/userinterface/calendar"
	"advent-calendar/userinterface/entry"
	"advent-calendar/userinterface/user"
	"gorm.io/gorm"
)

// Injectors from wire.go:

func InitializeUserCreateController(db *gorm.DB) *user.UserCreateController {
	userRepository := user2.NewUserRepository(db)
	userCreateService := user3.NewUserCreateService(userRepository)
	userCreateController := user.NewUserCreateController(userCreateService)
	return userCreateController
}

func InitializeUserFindController(db *gorm.DB) *user.UserFindController {
	userRepository := user2.NewUserRepository(db)
	userFindService := user3.NewUserFindService(userRepository)
	userFindController := user.NewUserFindController(userFindService)
	return userFindController
}

func InitializeCalendarCreateController(db *gorm.DB) *calendar.CalendarCreateController {
	calendarRepository := calendar2.NewCalendarRepository(db)
	calendarCreateService := calendar3.NewCalendarCreateService(calendarRepository)
	calendarCreateController := calendar.NewCalendarCreateController(calendarCreateService)
	return calendarCreateController
}

func InitializeCalendarFindController(db *gorm.DB) *calendar.CalendarFindController {
	calendarRepository := calendar2.NewCalendarRepository(db)
	calendarFindService := calendar3.NewCalendarFindService(calendarRepository)
	calendarFindController := calendar.NewCalendarFindController(calendarFindService)
	return calendarFindController
}

func InitializeEntryCreateController(db *gorm.DB) *entry.EntryCreateController {
	entryRepository := entry2.NewEntryRepository(db)
	userRepository := user2.NewUserRepository(db)
	userFindService := user3.NewUserFindService(userRepository)
	calendarRepository := calendar2.NewCalendarRepository(db)
	calendarFindService := calendar3.NewCalendarFindService(calendarRepository)
	entryCreateService := entry3.NewEntryCreateService(entryRepository, userFindService, calendarFindService)
	entryCreateController := entry.NewEntryCreateController(entryCreateService)
	return entryCreateController
}

func InitializeCalendarEntryListFindController(db *gorm.DB) *entry.CalendarEntryListFindController {
	entryRepository := entry2.NewEntryRepository(db)
	calendarRepository := calendar2.NewCalendarRepository(db)
	calendarFindService := calendar3.NewCalendarFindService(calendarRepository)
	calendarEntryListFindService := entry3.NewCalendarEntryListFindService(entryRepository, calendarFindService)
	calendarEntryListFindController := entry.NewCalendarEntryListFindController(calendarEntryListFindService)
	return calendarEntryListFindController
}

func InitializeUserEntryListFindController(db *gorm.DB) *entry.UserEntryListFindController {
	entryRepository := entry2.NewEntryRepository(db)
	userRepository := user2.NewUserRepository(db)
	userFindService := user3.NewUserFindService(userRepository)
	userEntryListFindService := entry3.NewUserEntryListFindService(entryRepository, userFindService)
	userEntryListFindController := entry.NewUserEntryListFindController(userEntryListFindService)
	return userEntryListFindController
}
